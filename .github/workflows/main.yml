name: main

on:
  push:
    branches: master
  pull_request:
    branches: master

defaults:
  run:
    shell: bash
    working-directory: .

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: nightly-2022-02-07

jobs:
  fmt-clippy:
    name: fmt & clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          profile: minimal
          override: true
          components: rustfmt, clippy
      - name: Cache build files
        uses: Swatinem/rust-cache@v1
      - name: Cargo fmt
        run: cargo fmt -- --check
      - name: Cargo clippy
        run: cargo clippy --all-targets
  unit:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          profile: minimal
          override: true
      - name: Cache build artefacts
        uses: Swatinem/rust-cache@v1
      - name: Run package checks
        run: cargo check      # run package checks
      - name: Run unit tests
        run: cargo test --lib # run unit tests
  cargo-audit:
    name: Cargo audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo-audit version
        uses: Swatinem/rust-cache@v1
      - name: Download cargo-audit
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-audit
          version: latest
      - name: Run cargo-audit # Using args from .cargo/audit.toml
        run: cargo audit
  yarn-prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install yarn
        run: yarn
      - name: Run prettier
        run: yarn prettify
  yarn-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install yarn
        run: yarn
      - name: Run lint
        run: yarn lint
  check-for-sdk-changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      sdk: ${{ steps.filter.outputs.sdk }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            sdk:
              - 'sdk/src/**'
  release:
    runs-on: ubuntu-latest
    needs: [fmt-clippy, unit, cargo-audit, yarn-prettier, yarn-lint, check-for-sdk-changes]
    if: ${{ github.ref == 'refs/heads/master' && needs.check-for-sdk-changes.outputs.sdk == 'true' }}
    defaults:
      run:
        working-directory: ./sdk
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Build sdk
        run: yarn
      - run: yarn build
      - name: Update package version
        run: npm version prerelease --preid=master
      - name: Git commit
        run: |
          VERSION=$(node -e "console.log(require('./package.json').version);")
          git config user.name "GitHub Actions"
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          git commit -a -m "sdk: release v$VERSION"
          git push origin HEAD
      - name: Publish to npm
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
